https://ssh.cloud.google.com/cloudshell/editor?shellonly=true
echo 'PS1="\w$ "' | tee -a .bashrc
git clone https://github.com/secobau/lpic1
find lpic1 | grep -v \.git 1> salida
sudo cp -v lpic1/etc/profile.d/history.sh /etc/profile.d/
. /etc/profile.d/history.sh
source /etc/profile.d/history.sh
cat 0< lpic1/etc/profile.d/history.sh | sudo tee -a .bashrc
. .bashrc
cd /etc && sudo git init
cd /etc && sudo git config --global user.email "you@example.com"
cd /etc && sudo git config --global user.name "Your Name"
cd /etc && sudo git add --all .
cd /etc && sudo git commit -m "Initial commit"
cd /etc && sudo git status
echo 'PS1="\w$ "' | sudo tee -a /etc/profile.d/history.sh
cd /etc && sudo git status
cd /etc && sudo git diff profile.d/history.sh
cd /etc && sudo git add profile.d/history.sh
cd /etc && sudo git commit -m "Change PS1"
cd /etc && sudo git log
cd /etc && sudo git revert
cat /etc/profile.d/history.sh
sudo rm /etc/profile.d/history.sh
cd /etc && sudo git status
cd /etc && sudo git checkout -- profile.d/history.sh

echo -e "dev\ngoogle\nproc\nrun\nsys\ntmp" | sudo tee /.gitignore
sudo cp -v lpic1/gitignore /.gitignore
cd / && sudo git init && sudo git add --all . && sudo git commit -m "Initial commit"

ip=$( curl checkip.dyn.com 2> /dev/null | awk -F "Current IP Address: " '{ print $2 }' | cut -d "<" -f 1 )
echo $ip

fake_ip=$( host checkip.dyn.com | awk -F "has address " '/address/{ print $2 }' | grep -m 1 . )
echo "$fake_ip www.upm.es" | sudo tee -a /etc/hosts
curl www.upm.es

scp test.original test.copia
scp 128.3.45.25:test.original test.copia
scp test.copia 128.3.45.25:test.original
scp foo.myname.com:test.original test.copia
scp test.copia foo.myname.com:test.original
cat .ssh/id_rsa.pub
id

cat .ssh/authorized_keys
stat .ssh/authorized_keys
ln .ssh/authorized_keys otro
stat otro
ln -s .ssh/authorized_keys otro-simbolico
stat otro-simbolico
mv otro-simbolico .otro
stat .otro

pwd
stat /home/ec2-user/
stat .
stat /home/ec2-user/.
stat /home/ec2-user/.ssh/..
mkdir subcarpeta
stat /home/ec2-user/
stat subcarpeta/..

openssl rand -base64 32 | tr -d '+=/' | fold -w 16 | head -n 1
https://en.wikipedia.org/wiki/Password_strength
a7yhUhs098 -> 62^10 = 2^E
62^L = 2^E
E = 6 * L

sudo grep ec2-user /etc/shadow
sudo passwd ec2-user
sudo grep ec2-user /etc/shadow
touch /etc/shadow
ls -l /bin/passwd
stat /bin/passwd
sudo chmod -s /bin/passwd
stat /bin/passwd
strace passwd
sudo chmod +s /bin/passwd

sudo find / -perm /g+s 2> /dev/null | grep -v /home | grep -v /usr/local/lib
stat /usr/local/etc/
file /usr/local/etc/
grep staff /etc/group
id
sudo usermod -aG staff ec2-user

ls -l /dev/stdin /dev/stdout /dev/stderr /dev/sda /dev/sda1 /dev/null /dev/zero

sudo dd if=imagen.iso of=/dev/usb
sudo dd if=/dev/zero of=/dev/usb
sudo lsblk
sudo dd if=/dev/sda of=_dev_sda_1b count=1
strings _dev_sda_1b
sudo od _dev_sda_1b
sudo od -taz _dev_sda_1b
sudo fdisk -l /dev/sda
sudo dd if=/dev/zero of=/dev/sda count=1
sudo fdisk -l /dev/sda
sudo dd if=_dev_sda_1b of=/dev/sda count=1
sudo fdisk -l /dev/sda

https://en.wikipedia.org/wiki/Page_table
https://en.wikipedia.org/wiki/Thread_safety
https://en.wikipedia.org/wiki/Paging
https://en.wikipedia.org/wiki/Out_of_memory
https://en.wikipedia.org/wiki/Vmstat

nice top
sudo nice -n -19 top
free
vmstat
vmstat 1
set -x && free && sudo swapoff -av && free && set +x

sudo apt-get purge nano joe -y
~$ crontab -e
no crontab for sebastian_colomar - using an empty one
crontab: installing new crontab
~$ crontab -l
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
0 1 * * * sudo apt-get update && sudo apt-get upgrade -y && sudo init 6
*/10 10-11 * * * ( date && free && top -b -n 1 && vmstat 1 10 ) 1>> /tmp/monitoring
0 11 * * 4 tar cfz /tmp/home.tgz /home/sebastian_colomar
0 12 * * 3 tar cfz /tmp/home.tgz /home/sebastian_colomar

ls -l /tmp/monitoring
watch !!

service cron status
sudo service cron start
sudo systemctl enable cron

https://www.lpi.org/our-certifications/exam-101-objectives
https://www.lpi.org/our-certifications/exam-102-objectives

df
df -i
du
du --inodes
sudo du | sort -k 1 -n | tail
sudo du --inodes | sort -k 1 -n | tail

https://en.wikipedia.org/wiki/BusyBox

ip r | grep eth0
sysctl net.ipv4.ip_forward
sudo sysctl net.ipv4.ip_forward=0
sudo sysctl net.ipv4.ip_forward=1

https://en.wikipedia.org/wiki/Address_Resolution_Protocol
https://en.wikipedia.org/wiki/User_Datagram_Protocol
https://en.wikipedia.org/wiki/Transmission_Control_Protocol
https://en.wikipedia.org/wiki/IPv4
https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol

arp -a
sudo apt-get install tcpdump -y
sudo tcpdump -w tcp.log
sudo tcpdump -XXn  -r tcp.log | less
sudo apt-get install traceroute -y
traceroute www.google.es
host www.upm.es 8.8.8.8
host www.upm.es 8.8.4.4
host -a www.upm.es
ping -c1 8.8.8.8
curl 8.8.8.8
ip r
traceroute 8.8.8.8
curl google.es
cat /etc/resolv.conf
echo nameserver 8.8.8.8 | sudo tee /etc/resolv.conf && sudo chattr +i /etc/resolv.conf
lsattr /etc/resolv.conf
echo dns-nameservers 8.8.8.8 8.8.4.4 | sudo tee -a /etc/network/interfaces # MORE OR LESS...
sudo ifdown eth0 && sudo ifup eth0 # SI NO FUERA INMUTABLE... ME MODIFICARIA RESOLV.CONF

service --status-all

ssh-keygen
gpg --symmetric --armor --output thales.txt thales
cat 1> thales2.txt
sudo apt-get install -y dos2unix
dos2unix thales2.txt
gpg --decrypt --output thales2 thales2.txt
chmod 600 thales2
ssh centos@thales1.gotdns.org -i thales -oStrictHostKeyChecking=no hostname
ssh centos@thales2.gotdns.org -i thales -oStrictHostKeyChecking=no hostname

host local.do
ssh centos@thales1.gotdns.org -i thales
ip r | grep eth1 && exit
ssh centos@thales2.gotdns.org -i thales

https://en.wikipedia.org/wiki/Regular_expression

ssh centos@thales1.gotdns.org -i thales " echo $( cat .ssh/id_rsa.pub ) | tee .ssh/authorized_keys "

mkdir iso
sudo mount /media/USB/debian.iso iso -oloop
sudo apt-cdrom -d=iso add

sudo ls /proc
sudo ls /var/lib/docker
sudo docker run -it --name ubuntu ubuntu
sudo docker container run --publish 80:8080 --name api --restart unless-stopped --detach secobau/4543-api
sudo docker container exec -ti api sh

https://www.vagrantup.com/downloads.html
https://www.virtualbox.org/wiki/Downloads
https://git-scm.com/download/

https://www.vagrantup.com/docs/virtualbox/configuration.html
https://www.vagrantup.com/docs/virtualbox/networking.html
https://www.vagrantup.com/docs/boxes.html
https://app.vagrantup.com/debian
https://app.vagrantup.com/centos
https://app.vagrantup.com/ubuntu

https://en.wikipedia.org/wiki/Debian
https://en.wikipedia.org/wiki/Debian_version_history


vagrant plugin install virtualbox
mkdir Vagrant && cd Vagrant && git clone https://github.com/secobau/lpic1
cp lpic1/Vagrantfile . && vagrant up --parallel
vagrant status
vagrant ssh mgmt -c ' hostname && date '
vagrant destroy -f

https://en.wikipedia.org/wiki/Runlevel
https://en.wikipedia.org/wiki/Systemd

test -d lpic1 && cd lpic1 && git pull
test -d lpic1 || git clone https://github.com/secobau/lpic1 && cd lpic1
sudo cp -rv * /
sudo chmod +x /usr/local/sbin/tcpdump.sh
sudo systemctl enable tcpdump.service
sudo init 6

sudo grep tcpdump.sh /var/log/messages | less
sudo tail --follow /var/log/messages | grep tcpdump.sh
sudo grep tcpdump.sh /var/log/messages | tail
pidof tcpdump
sudo tcpdump -XXn -r /var/log/tcpdump/*.pcap | less 

nohup ./script &
./script &
nohup ./script

dpkg -l | tee list-of-installed-packages
dpkg -S /bin/ls
dpkg -S $( which host )
sudo dpkg -i paquete.deb && sudo apt-get install -f
sudo dpkg -r paquete.deb
sudo apt-get autoremove && sudo apt-get autoclean && sudo apt-get clean
sudo apt-get install deborphan -y
sudo apt-get purge -y $( sudo deborphan )
apt-cache search host | grep ^host

sudo apt-get install -y apt-build
sudo apt-build install -y nginx 
